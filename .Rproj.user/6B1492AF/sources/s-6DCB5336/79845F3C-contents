#빠진 데이터를 찾아라! - 결측치 정제하기
#R에서는 결측치를 대문자 NA("NA"가 아님)로 표기한다. NA 앞뒤에 따옴표가 없다는 것에 유의하세요. 따옴표가 있으면 결측치가 아니라 영문자 "NA"를 의미합니다.

df <- data.frame(sex=c("M", "F", NA, "M", "F"),
                 score=c(5,4,3,4,NA))
df

##결측치 확인하기[is.na()를 이용하면 데이터에 결측치가 들어 있는지 알 수 있다. 반환값은 TRUE or FALSE로 반환함.]
is.na(df)

###is.na()를 table()에 적용하면 데이터에 결측치가 총 몇 개 있는지 출력합니다.
table(is.na(df))
table(is.na(df$sex))
table(is.na(df$score))

###결측치가 포함된 데이터를 제거하지 않고 함수에 적용하면 정상적으로 연산되지 않고 NA가 출력된다.
mean(df$score)
sum(df$score)

##결측치 제거하기
###결측치 있는 행 제거하기
library(dplyr)
df %>% filter(!is.na(score), !is.na(sex))

df_nomiss <- df %>% filter(!is.na(score))
mean(df_nomiss$score)
sum(df_nomiss$score)
#### is.na() 앞에 아니다를 의하는 기호 ! 를 붙여 !is.na()를 입력하면 NA가 아닌 값, 즉 결측치가 아닌 값을 의미한다. 이 코드를 filter()에 적용하면 결측치를 제외하고 행을 추출한다.

###여러 변수 동시에 결측치 없는 데이터 추출하기
####방법 1
df_nomiss <- df %>% filter(!is.na(score), !is.na(sex)); df_nomiss
####방법 2
df_nomiss <- df %>% filter(!is.na(score) & !is.na(sex)); df_nomiss

###결측치가 하나라도 있으면 제거하기
#### 'na.omit()을 이용하면 변수를 지정하지 않고 결측치가 있는 행을 한번에 제거할 수 있다.
#### na.omit()은 결측치가 하나라도 있으면 모두 제거하기 때ㅜㅁㄴ에 간편한 측면이 있지만, 분석에 필요한 행까지 손실된다는 단점이 있다. 따라서 filter()를 이용해 분석에 사용할 변수의 결측치만 제거하는 방식을 권한다.
df_nomiss2 <- na.omit(df)
df_nomiss2

###함수의 결측치 제외 기능 이용하기
##### mean()과 같은 수치 연산 함수들은 결측치를 제외하고 연산하도록 설정하는 na.rm 파라미터를 지원함. na.rm=TRUE로 설정시 결측치를 제외하고 함수를 적용하기 때문에 일일이 결측치를 제거하는 절차를 건너뛰고 곧바로 분석할 수 있다. 만약 함수가 na.rm을 지원하지 않으면 filter()로 결측치를 제거한 후 함수를 적용하는 순으로 작업해야 한다.
mean(df$score, na.rm=T) ####결측치 제외하고 평균 산출
sum(df$score, na.rm=T) ####결측치 제외하고 합계 산출


exam <- read.csv("data/csv_exam.csv") #데이터 불러오기
exam[c(3,8,15), "math"] <- NA
exam %>% summarise(mean_math=mean(math)) #math 평균 산출
exam %>% summarise(mean_math=mean(math, na.rm = T),
                   sum_math=sum(math, na.rm=T),
                   median_math=median(math, na.rm=T)) #math 결측치 제외하고 산출

###결측치 대체하기
####평균값으로 결측치 대체하기
mean(exam$math, na.rm=T)
exam$math <- ifelse(is.na(exam$math), 55, exam$math) ####math가 NA면 55로 대체
table(is.na(exam$math)) ####결측치 빈도표 생성

exam
mean(exam$math)

#결측치가 들어있는 mpg 데이터를 이용해 분석 문제를 해결해 보세요.
mpg <- as.data.frame(ggplot2::mpg)
mpg[c(65,124,131,153,212), "hwy"] <- NA

##Q1. drv(구동 방식)별로 hwy(고속도로 연비) 평균이 어떻게 다른지 알아보려고 합니다. 분석을 하기 전에 우선 두 변수에 결측치가 있는지 확인해야 합니다. drv 변수와 hwy 변수에 결측치가 몇개 있는지 알아보세요.

table(is.na(mpg$drv))
table(is.na(mpg$hwy))

##Q2. filter()를 이용해 hwy 변수의 결측치를 제외하고, 어떤 구동 방식의 hwy 평균이 높은지 알아보세요. 하나의 dplyr 구문으로 만들어야 합니다.
mpg %>%
  filter(!is.na(hwy)) %>% #결측치 제외
  group_by(drv) %>% #drv별 분리
  summarise(mean_hwy=mean(hwy)) #hwy 평균 구하기

#이상한 데이터를 찾아라! - 이상치 정제하기
##이상치 제거하기 - 존재할 수 없는 값
outlier <- data.frame(sex=c(1,2,1,3,2,1), ### 1은 남자, 2는 여자, 3은 이상치
                      score=c(5,4,3,4,2,6)) ### 1~5 범위, 6은 이상치
outlier
table(outlier$sex)
table(outlier$score)

##sex가 3이면 NA 할당
outlier$sex <- ifelse(outlier$sex==3, NA, outlier$sex)
outlier

##score가 5보다 크다면 NA 할당
outlier$score <- ifelse(outlier$score>5, NA, outlier$score)
outlier

##filter()를 이용해 결측치를 제외한 후 성별에 따른 score 평균을 구하겠습니다.
outlier %>%
  filter(!is.na(sex) & !is.na(score)) %>%
  group_by(sex) %>%
  summarise(mean_score=mean(score))

##이상치 제거하기-극단적인 값

boxplot(mpg$hwy)
###상자 그림을 만들 때 사용하는 다섯 가지 총계치(stats)를 출력하는 기능
###출력 결과 위에서 아래 순으로, 아래쪽 단단치 경계, 1사분위수, 중앙값, 3사 분위수, 위쪽 극단치 경계를 의미한다.
boxplot(mpg$hwy)$stats

###결측 처리하기
#### 12~37 벗어나면 NA 할당 후 결측치를 제외하고 간단한 분석 수행
mpg$hwy <- ifelse(mpg$hwy<12|mpg$hwy >37, NA, mpg$hwy)
table(is.na(mpg$hwy))
mpg %>%
  group_by(drv) %>%
  summarise(mean_hwy=mean(hwy, na.rm=T))

#mpg 데이터를 이용해 분석 문제 해결하기
mpg <- as.data.frame(ggplot2::mpg) ##데이터 불러오기
mpg[c(10,14,58,93), "drv"] <- "k" ##drv 이상치 할당
mpg[c(29,43,129,203), "cty"] <- c(3,4,39,42) ##cty 이상치 할당

##Q1. drv에 이상치가 있는지 확인하고 결측 처리한 후 이상치가 사라졌는지 확인하세요. 결측 처리를 할 때는 %in% 기호를 활용하세요.
mpg %>%
  boxplot(cty)